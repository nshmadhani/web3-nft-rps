{"ast":null,"code":"import { ethers } from 'ethers';\nimport * as contractMetadata from \"./metadata/EpicRPS\";\nconst contractAddr = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nexport default class EpicRPS {\n  //Attack the Boss\n  //Get the Boss\n  static async load(ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    this.contract = new ethers.Contract(contractAddr, contractMetadata.abi, signer);\n  } //Returns Metadata for user\n\n\n  static async getMintedNFT(address) {\n    return await this.contract.getMintedNFT();\n  }\n\n  static async getDefaultCharacters() {\n    return await this.contract.getAllDefaultCharacters();\n  }\n\n}\nEpicRPS.contract = null;","map":{"version":3,"sources":["/media/nshmadhani/Work/Projects/Blockchain/web3-nft-rps/frontend/src/contracts/contract.js"],"names":["ethers","contractMetadata","contractAddr","EpicRPS","load","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","getMintedNFT","address","getDefaultCharacters","getAllDefaultCharacters"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,oBAAlC;AAEA,MAAMC,YAAY,GAAG,4CAArB;AAIA,eAAe,MAAMC,OAAN,CAAc;AAC3B;AACA;AAIiB,eAAJC,IAAI,CAACC,QAAD,EAAW;AAE1B,UAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCH,QAAlC,CAAjB;AACA,UAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AAEA,SAAKC,QAAL,GAAgB,IAAIX,MAAM,CAACY,QAAX,CACdV,YADc,EAEdD,gBAAgB,CAACY,GAFH,EAGdJ,MAHc,CAAhB;AAKD,GAhB0B,CAmB3B;;;AACyB,eAAZK,YAAY,CAACC,OAAD,EAAU;AACjC,WAAO,MAAM,KAAKJ,QAAL,CAAcG,YAAd,EAAb;AACD;;AAEgC,eAApBE,oBAAoB,GAAG;AAClC,WAAO,MAAM,KAAKL,QAAL,CAAcM,uBAAd,EAAb;AACD;;AA1B0B;AAARd,O,CAIZQ,Q,GAAW,I","sourcesContent":["import { ethers } from 'ethers';\nimport * as contractMetadata from \"./metadata/EpicRPS\";\n\nconst contractAddr = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n\n\nexport default class EpicRPS {\n  //Attack the Boss\n  //Get the Boss\n\n  static contract = null;\n  static etherem\n  static async load(ethereum) {\n\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n\n    this.contract = new ethers.Contract(\n      contractAddr,\n      contractMetadata.abi,\n      signer\n    );\n  }\n\n\n  //Returns Metadata for user\n  static async getMintedNFT(address) {\n    return await this.contract.getMintedNFT();\n  }\n\n  static async getDefaultCharacters() {\n    return await this.contract.getAllDefaultCharacters();\n  }\n\n\n\n\n\n\n\n  \n}"]},"metadata":{},"sourceType":"module"}