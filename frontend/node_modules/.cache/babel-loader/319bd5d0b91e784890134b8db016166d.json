{"ast":null,"code":"import { ethers } from 'ethers';\nimport * as contractMetadata from \"./metadata/EpicRPS\";\nconst contractAddr = \"0x106fd0efedc1b769AcdB92c070Ea270a967406c6\";\nexport default class EpicRPS {\n  //Attack the Boss\n  //Get the Boss\n  static async load(ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    this.contract = new ethers.Contract(contractAddr, contractMetadata.abi, signer);\n  } //Returns Metadata for user\n\n\n  static async getMintedNFT(address) {\n    return await this.contract.checkIfUserHasNFT();\n  }\n\n  static async getDefaultCharacters() {\n    return await this.contract.getAllDefaultCharacters();\n  }\n\n  static async minCharacterNFT(index) {\n    return await this.contract.minCharacterNFT(index);\n  }\n\n  static getContract() {\n    return this.contract;\n  }\n\n}\nEpicRPS.contract = null;","map":{"version":3,"sources":["/media/nshmadhani/Work/Projects/Blockchain/web3-nft-rps/frontend/src/contracts/contract.js"],"names":["ethers","contractMetadata","contractAddr","EpicRPS","load","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","getMintedNFT","address","checkIfUserHasNFT","getDefaultCharacters","getAllDefaultCharacters","minCharacterNFT","index","getContract"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,oBAAlC;AAEA,MAAMC,YAAY,GAAG,4CAArB;AAIA,eAAe,MAAMC,OAAN,CAAc;AAC3B;AACA;AAIiB,eAAJC,IAAI,CAACC,QAAD,EAAW;AAE1B,UAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCH,QAAlC,CAAjB;AACA,UAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AAEA,SAAKC,QAAL,GAAgB,IAAIX,MAAM,CAACY,QAAX,CACdV,YADc,EAEdD,gBAAgB,CAACY,GAFH,EAGdJ,MAHc,CAAhB;AAKD,GAhB0B,CAmB3B;;;AACyB,eAAZK,YAAY,CAACC,OAAD,EAAU;AACjC,WAAO,MAAM,KAAKJ,QAAL,CAAcK,iBAAd,EAAb;AACD;;AAEgC,eAApBC,oBAAoB,GAAG;AAClC,WAAO,MAAM,KAAKN,QAAL,CAAcO,uBAAd,EAAb;AACD;;AAE2B,eAAfC,eAAe,CAACC,KAAD,EAAQ;AAClC,WAAO,MAAM,KAAKT,QAAL,CAAcQ,eAAd,CAA8BC,KAA9B,CAAb;AACD;;AAEiB,SAAXC,WAAW,GAAG;AACnB,WAAO,KAAKV,QAAZ;AACD;;AAlC0B;AAARR,O,CAIZQ,Q,GAAW,I","sourcesContent":["import { ethers } from 'ethers';\nimport * as contractMetadata from \"./metadata/EpicRPS\";\n\nconst contractAddr = \"0x106fd0efedc1b769AcdB92c070Ea270a967406c6\";\n\n\n\nexport default class EpicRPS {\n  //Attack the Boss\n  //Get the Boss\n\n  static contract = null;\n  static etherem\n  static async load(ethereum) {\n\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n\n    this.contract = new ethers.Contract(\n      contractAddr,\n      contractMetadata.abi,\n      signer\n    );\n  }\n\n\n  //Returns Metadata for user\n  static async getMintedNFT(address) {\n    return await this.contract.checkIfUserHasNFT();\n  }\n\n  static async getDefaultCharacters() {\n    return await this.contract.getAllDefaultCharacters();\n  }\n\n  static async minCharacterNFT(index) {\n    return await this.contract.minCharacterNFT(index);\n  }\n\n  static getContract() {\n    return this.contract;\n  }\n\n\n\n\n\n\n\n\n  \n}"]},"metadata":{},"sourceType":"module"}